[{"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/gateWayIcon.tsx":"1","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/loading.tsx":"2","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/paytm/paytmLogo.tsx":"3","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/razorpay/formComponent.tsx":"4","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/razorpay/razorpayForm.tsx":"5","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/selectInputBox.tsx":"6","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/constants.ts":"7","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/_app.tsx":"8","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/config.js":"9","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/httpRequest.ts":"10","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/createLinkApi.ts":"11","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/paytmPostTransaction.ts":"12","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/paytmPreTransaction.ts":"13","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/createOrderApi.ts":"14","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayLinkApi.ts":"15","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayLinkStatus.ts":"16","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayPayment.ts":"17","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/index.tsx":"18","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/PaytmLink/createPaytmLink.tsx":"19","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/PaytmLink/paytmLinkResponse.tsx":"20","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/paytmPayment/paytmCreateOrder.tsx":"21","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayLink/createLink.tsx":"22","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayLink/responseRazorpayLink.tsx":"23","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/OrderResponseFailed.tsx":"24","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/PaymentFailed.tsx":"25","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/createOrder.tsx":"26","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/orderSuccessResponse.tsx":"27","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/payment.tsx":"28","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/paymentResponse.tsx":"29","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/_document.tsx":"30"},{"size":1046,"mtime":1681731963294,"results":"31","hashOfConfig":"32"},{"size":472,"mtime":1681731963256,"results":"33","hashOfConfig":"32"},{"size":716,"mtime":1681727470126,"results":"34","hashOfConfig":"32"},{"size":6406,"mtime":1681731963311,"results":"35","hashOfConfig":"32"},{"size":2679,"mtime":1681727470126,"results":"36","hashOfConfig":"32"},{"size":1200,"mtime":1681727470126,"results":"37","hashOfConfig":"32"},{"size":593,"mtime":1681727470127,"results":"38","hashOfConfig":"32"},{"size":176,"mtime":1681731963261,"results":"39","hashOfConfig":"32"},{"size":231,"mtime":1681727470127,"results":"40","hashOfConfig":"32"},{"size":1295,"mtime":1681731963272,"results":"41","hashOfConfig":"32"},{"size":3747,"mtime":1681731963302,"results":"42","hashOfConfig":"32"},{"size":3385,"mtime":1681731963282,"results":"43","hashOfConfig":"32"},{"size":2620,"mtime":1681731963306,"results":"44","hashOfConfig":"32"},{"size":2142,"mtime":1681731963288,"results":"45","hashOfConfig":"32"},{"size":2589,"mtime":1681731963290,"results":"46","hashOfConfig":"32"},{"size":1077,"mtime":1681731963313,"results":"47","hashOfConfig":"32"},{"size":872,"mtime":1681731963258,"results":"48","hashOfConfig":"32"},{"size":5184,"mtime":1681727470128,"results":"49","hashOfConfig":"32"},{"size":5132,"mtime":1681727470128,"results":"50","hashOfConfig":"32"},{"size":1584,"mtime":1681727470128,"results":"51","hashOfConfig":"32"},{"size":5541,"mtime":1681732005537,"results":"52","hashOfConfig":"32"},{"size":6016,"mtime":1681731963275,"results":"53","hashOfConfig":"32"},{"size":1362,"mtime":1681731963253,"results":"54","hashOfConfig":"32"},{"size":1377,"mtime":1681727470129,"results":"55","hashOfConfig":"32"},{"size":1277,"mtime":1681731963292,"results":"56","hashOfConfig":"32"},{"size":3974,"mtime":1681731963265,"results":"57","hashOfConfig":"32"},{"size":2787,"mtime":1681731963287,"results":"58","hashOfConfig":"32"},{"size":6520,"mtime":1681732015689,"results":"59","hashOfConfig":"32"},{"size":2597,"mtime":1681727470129,"results":"60","hashOfConfig":"32"},{"size":545,"mtime":1681731963280,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ad3ym",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/gateWayIcon.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/loading.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/paytm/paytmLogo.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/razorpay/formComponent.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/razorpay/razorpayForm.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/Component/selectInputBox.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/constants.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/_app.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/config.js",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/httpRequest.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/createLinkApi.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/paytmPostTransaction.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/paytm/paytmPreTransaction.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/createOrderApi.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayLinkApi.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayLinkStatus.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/api/razorpay/razorpayPayment.ts",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/index.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/PaytmLink/createPaytmLink.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/PaytmLink/paytmLinkResponse.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/paytm/paytmPayment/paytmCreateOrder.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayLink/createLink.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayLink/responseRazorpayLink.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/OrderResponseFailed.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/PaymentFailed.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/createOrder.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/orderSuccessResponse.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/payment.tsx",["153"],[],"import React, {useEffect, useState} from \"react\";\nimport styles from '@/styles/Home.module.css'\nimport {Container, createTheme, TextField, ThemeProvider} from \"@mui/material\";\nimport {useRouter} from \"next/router\";\nimport axios from \"axios\";\nimport {Loading} from \"@/Component/loading\";\nimport {RazorpayLogo} from \"@/Component/razorpay/razorpayForm\";\n\nconst theme = createTheme();\n\n/**\n * Render Razorpay payment gateway on screen\n * @param params\n * @constructor\n */\nconst Payment = (params: any) => {\n    const [orderId, setOrderId] = useState<any>(undefined);\n    const [isActive, setActive] = useState(false)\n    const [razorpayId, setRazorpayId] = useState<any>(\"\");\n    const router = useRouter();\n    const dataValue: any = router.query;\n    const [error, setError] = useState<any>(false)\n\n    useEffect(() => {\n        setOrderId(dataValue.journey && dataValue.id);\n        setRazorpayId(dataValue.journey && dataValue.razorpay_id);\n    }, [])\n\n    //handle onClick Disabled\n    const handleDisabled = () => {\n        return !(razorpayId?.length >= 18 && orderId?.length >= 10);\n    }\n\n    //handle onclick event on submit button\n    const showRazorPay = async () => {\n        setError(true)\n        let data: any;\n        const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\")\n        if (!res) {\n            alert(\"Razorpay SDK failed to load. Are you online?\");\n            return;\n        }\n        const options = {\n            gatewayId: razorpayId, // Enter the Key ID generated from the Dashboard\n            order_id: orderId,\n            amount: parseInt(dataValue.amount),\n            currency: dataValue.currency,\n            handler: async function (response: any) {\n                data = {\n                    orderCreationId: orderId,\n                    razorpayPaymentId: response.razorpay_payment_id,\n                    razorpayOrderId: response.razorpay_order_id,\n                    razorpaySignature: response.razorpay_signature,\n                };\n\n                await axios.post('/api/razorpay/razorpayPayment', options).then(async (res: any) => {\n                    await router.replace({\n                        pathname: \"/razorpay/razorpayPayment/paymentResponse\",\n                        query: data,\n                    });\n                })\n\n            },\n            \"modal\": {\n                \"ondismiss\": function () {\n                    window.location.replace(\"/razorpay/razorpayPayment/PaymentFailed\");\n                }\n            }\n        };\n        setActive(true)\n        // @ts-ignore\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n    }\n\n    return (\n        <div>\n            <div className={styles.main}>\n                <ThemeProvider theme={theme}>\n                    <Container>\n                        {\n                            isActive ?\n                                <Loading/>\n                                :\n                                <div className={styles.mainContainer}>\n                                    <RazorpayLogo/>\n                                    <div className={styles.App}>\n                                        <div className={styles.tab}>\n                                            <div className={styles.heading}>Payment Gateway</div>\n                                            <div className={styles.horizontalLine}></div>\n                                            <div className={styles.form}>\n                                                <div className={styles.textInput}>\n                                                    <TextField id=\"outlined-basic\" label=\"Razorpay Id\"\n                                                               variant=\"outlined\"\n                                                               value={razorpayId}\n                                                               className={styles.input}\n                                                               onChange={e => setRazorpayId(e.target.value)}/>\n                                                </div>\n                                                {!error && (razorpayId?.length <= 18 && razorpayId?.length != 0) ?\n                                                    <label className={styles.error}>Enter a valid RazorpayId\n                                                    </label> : \"\"\n                                                }\n                                                <div className={styles.textInput}>\n                                                    <TextField id=\"outlined-basic\" label=\"Order Id\" variant=\"outlined\"\n                                                               value={orderId}\n                                                               className={styles.input}\n                                                               onChange={e => setOrderId(e.target.value)}/>\n\n                                                </div>\n                                                {!error && (orderId?.length < 10 && orderId?.length != 0) ?\n                                                    <label className={styles.error}>Enter a valid OrderId\n                                                    </label> : \"\"\n                                                }\n                                                <div className={styles.buttonStyle}>\n                                                    <button disabled={handleDisabled()}\n                                                            className={`${handleDisabled() ? styles.btn : styles.enabled}`}\n                                                            onClick={() => showRazorPay()}>Submit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                        }\n                    </Container>\n                </ThemeProvider>\n            </div>\n        </div>\n    )\n}\n\n//Render the script of the razorpay\nexport function loadScript(src: any) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n}\n\nexport default Payment\n","/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/razorpay/razorpayPayment/paymentResponse.tsx",[],[],"/Users/sparshjain/Desktop/git/razorpay-example-nextjs/src/pages/_document.tsx",[],[],{"ruleId":"154","severity":1,"message":"155","line":27,"column":8,"nodeType":"156","endLine":27,"endColumn":10,"suggestions":"157"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataValue.id', 'dataValue.journey', and 'dataValue.razorpay_id'. Either include them or remove the dependency array.","ArrayExpression",["158"],{"desc":"159","fix":"160"},"Update the dependencies array to be: [dataValue.id, dataValue.journey, dataValue.razorpay_id]",{"range":"161","text":"162"},[948,950],"[dataValue.id, dataValue.journey, dataValue.razorpay_id]"]